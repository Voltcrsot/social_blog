# Generated by Django 4.2.20 on 2025-04-13 16:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Максимум 100 символов.', max_length=100, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Уникальный фрагмент URL на основе названия. Максимум 120 символов.', max_length=120, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Максимум 200 символов.', max_length=200, verbose_name='Заголовок')),
                ('slug', models.SlugField(help_text='Уникальный фрагмент URL на основе заголовка. Максимум 220 символов.', max_length=220, unique=True, verbose_name='Слаг')),
                ('content', models.TextField(verbose_name='Содержимое')),
                ('visibility', models.CharField(choices=[('public', 'Всем'), ('followers', 'Только подписчикам'), ('private', 'Только мне')], db_index=True, default='public', help_text='Кто может видеть этот пост.', max_length=10, verbose_name='Видимость')),
                ('is_published', models.BooleanField(default=False, help_text='Отметьте, если пост готов (будет опубликован сразу или по расписанию, в зависимости от видимости).', verbose_name='Готов к публикации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('published_at', models.DateTimeField(blank=True, db_index=True, help_text="Дата и время, когда пост станет доступен. Если не указано, используется текущее время при установке 'Готов к публикации' (если видимость не 'Только мне').", null=True, verbose_name='Дата и время публикации')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='posts.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.comment', verbose_name='Родительский комментарий')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.post', verbose_name='Пост')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.SmallIntegerField(choices=[(1, 'Нравится'), (-1, 'Не нравится')], verbose_name='Тип голоса')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID объекта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тип контента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Голос',
                'verbose_name_plural': 'Голоса',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='posts_vote_content_33a66f_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('user', 'content_type', 'object_id'), name='unique_user_content_vote'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-published_at', '-created_at'], name='posts_post_publish_994048_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['author'], name='posts_post_author__19d68b_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['category'], name='posts_post_categor_b0a4b1_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['visibility'], name='posts_post_visibil_c4edb4_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_published', 'published_at'], name='posts_post_is_publ_390cce_idx'),
        ),
    ]
